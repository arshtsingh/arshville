{"version":3,"sources":["arshville.svg","pics/01.jpeg","pics/02.jpeg","pics/03.jpeg","pics/04.jpeg","pics/05.jpeg","pics/06.jpeg","pics/07.jpeg","pics/08.jpeg","components/Home.js","components/About.js","components/Contact.js","components/ProjectCard.js","components/Projects.js","components/Gallery.js","components/Stickers.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","Component","About","Contact","row","display","right","marginLeft","ProjectCard","style","this","props","name","Button","variant","src","img","alt","tileData","title","Projects","Divider","color","map","tile","i1","author","cols","i2","i3","i4","i5","i6","i7","i8","Gallery","GridList","cellHeight","GridListTile","key","Stickers","App","className","ArshvilleLogo","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ff3df3b0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arshville.b5dd41c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/01.85088823.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/02.8582c8a1.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/03.525dcd36.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/04.9fa6c380.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/05.73a25ce5.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/06.5a361f6c.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/07.e41d5955.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/08.5ae096d7.jpeg\";","// Home.js\n\nimport React, { Component } from 'react';\nimport ReactPlayer from \"react-player\"\n\nclass Home extends Component {\n    render() {\n        return (\n            <div>\n               <h2>This is Arsh Singh's Home Page</h2>\n            </div>\n        );\n    }\n}\n\nexport default Home;","// Home.js\n\nimport React, { Component } from 'react';\n\nclass About extends Component {\n    render() {\n        return (\n            <div>\n                <h2>About</h2>\n            </div>\n        );\n    }\n}\n\nexport default About;","// Contact.js\n\nimport React, { Component } from 'react';\n\nclass Contact extends Component {\n    render() {\n        return (\n            <div>\n                <h2>Contact</h2>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","// Home.js\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nconst row = {\n  display: \"flex\",\n};\n\nconst right = {\n  marginLeft: \"auto\",\n};\n\nclass ProjectCard extends Component {\n  render() {\n    return (\n      <div>\n        <div style={row}>\n          <div>\n            <h2>{this.props.name}</h2>\n          </div>\n          <div style={right}>\n            <Button variant=\"contained\">Back to Top</Button>\n          </div>\n        </div>\n        <div>\n          <img src={this.props.img} alt=\"img\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProjectCard;\n","// Projects.js\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Divider } from '@material-ui/core';\nimport ProjectCard from \"./ProjectCard\";\n\nconst tileData = [\n    {\n        img: \"https://media.giphy.com/media/XZTgfBwEuOy7KFhb5p/giphy.gif\",\n        title: 'Joustr.io',\n    },\n    {\n        img: \"https://media.giphy.com/media/XZTgfBwEuOy7KFhb5p/giphy.gif\",\n        title: 'Quotr',\n    },\n];\n\nclass Projects extends Component {\n    render() {\n        return (\n            <div>\n                <Divider variant=\"middle\" />\n                <h2>Projects</h2>\n                <Button variant=\"contained\" color=\"theme\">Joustr</Button>\n                <Button variant=\"contained\" color=\"theme\">Quotr</Button>\n                <Divider variant=\"middle\" />\n                <div>\n                    {tileData.map((tile) => (\n                        <ProjectCard name={tile.title} img={tile.img}/>\n                        ))}\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Projects;","// Gallery.js\n\nimport React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport i1 from '../pics/01.jpeg';\nimport i2 from '../pics/02.jpeg';\nimport i3 from '../pics/03.jpeg';\nimport i4 from '../pics/04.jpeg';\nimport i5 from '../pics/05.jpeg';\nimport i6 from '../pics/06.jpeg';\nimport i7 from '../pics/07.jpeg';\nimport i8 from '../pics/08.jpeg';\n\n\nconst tileData = [\n    {\n        img: i1,\n        title: 'Image',\n        author: 'author',\n        cols: 2,\n    },\n    {\n        img: i2,\n        title: 'Image',\n        author: 'author',\n        cols: 2,\n    },\n    {\n        img: i3,\n        title: 'Image',\n        author: 'author',\n        cols: 2,\n    },\n    {\n        img: i4,\n        title: 'Image',\n        author: 'author',\n        cols: 2,\n    },\n    {\n        img: i5,\n        title: 'Image',\n        author: 'author',\n        cols: 2,\n    },\n    {\n        img: i6,\n        title: 'Image',\n        author: 'author',\n        cols: 2,\n    },\n    {\n        img: i7,\n        title: 'Image',\n        author: 'author',\n        cols: 3,\n    },\n    {\n        img: i8,\n        title: 'Image',\n        author: 'author',\n        cols: 3,\n    },\n];\n\nclass Gallery extends Component {\n    render() {\n        return (\n            <div>\n                <GridList cellHeight={300} cols={6}>\n                    {tileData.map((tile) => (\n                        <GridListTile key={tile.img} cols={tile.cols || 1}>\n                            <img src={tile.img} alt={tile.title} />\n                        </GridListTile>\n                    ))}\n                </GridList>\n            </div>\n        );\n    }\n}\n\nexport default Gallery;\n\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *     cols: 2,\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\n","// Stickers.js\n\nimport React, { Component } from 'react';\n\nclass Stickers extends Component {\n    render() {\n        return (\n            <div>\n                <h2>Stickers</h2>\n            </div>\n        );\n    }\n}\n\nexport default Stickers;","import React from 'react';\nimport './App.css';\n// import Logo from './logo2.png'\nimport ArshvilleLogo from './arshville.svg'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport Projects from \"./components/Projects\";\nimport Gallery from \"./components/Gallery\";\nimport Stickers from \"./components/Stickers\";\n\nfunction App() {\n  return (\n      <Router>\n        <div className=\"App\">\n          <img className=\"App-logo\" src={ArshvilleLogo} alt=\"Logo\" />\n          <nav className=\"navbar\">\n            <ul className=\"navbar-ul\">\n              <li><Link to={'/'} className=\"nav-link\"> Home </Link></li>\n              <li><Link to={'/contact'} className=\"nav-link\">Contact</Link></li>\n              <li><Link to={'/about'} className=\"nav-link\">About</Link></li>\n              <li><Link to={'/projects'} className=\"nav-link\">Projects</Link></li>\n              <li><Link to={'/gallery'} className=\"nav-link\">Gallery</Link></li>\n              <li><Link to={'/stickers'} className=\"nav-link\">Stickers</Link></li>\n            </ul>\n          </nav>\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route path='/projects' component={Projects} />\n            <Route path='/about' component={About} />\n            <Route path='/gallery' component={Gallery} />\n            <Route path='/stickers' component={Stickers} />\n            <Route path='/contact' component={Contact} />\n          </Switch>\n        </div>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}